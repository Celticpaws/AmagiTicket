# -*- coding: utf-8 -*-
# Generated by Django 1.9.4 on 2016-03-31 20:32
from __future__ import unicode_literals

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('TicketsApp', '0005_auto_20160323_1125'),
    ]

    operations = [
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('c_id', models.IntegerField(unique=True)),
                ('c_name', models.CharField(max_length=100)),
                ('c_owner', models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('d_id', models.IntegerField(unique=True)),
                ('d_name', models.CharField(max_length=100)),
                ('d_manager', models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Disk',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dsk_id', models.IntegerField()),
                ('dsk_name', models.CharField(max_length=20)),
                ('dsk_capacity', models.IntegerField()),
                ('dsk_usage', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Management',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('m_id', models.IntegerField(unique=True)),
                ('m_name', models.CharField(max_length=100)),
                ('m_manager', models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Phone',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_number', models.CharField(blank=True, max_length=15, validators=[django.core.validators.RegexValidator(message="El telefono debe estar en formato: '+999999999'.", regex='^\\+?1?\\d{9,15}$')])),
            ],
        ),
        migrations.CreateModel(
            name='Server',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('srv_name', models.CharField(max_length=50)),
                ('srv_ip', models.GenericIPAddressField()),
                ('srv_gateway', models.GenericIPAddressField()),
                ('srv_so', models.CharField(max_length=100)),
                ('srv_memory', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('svc_id', models.IntegerField()),
                ('svc_name', models.CharField(max_length=50)),
                ('svc_ison', models.BooleanField()),
                ('svc_server', models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, to='TicketsApp.Server')),
            ],
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('t_id', models.IntegerField()),
                ('t_isincident', models.BooleanField()),
                ('t_category', models.CharField(max_length=20)),
                ('t_description', models.CharField(max_length=200)),
                ('t_impact', models.IntegerField()),
                ('t_priority', models.IntegerField()),
                ('t_sla', models.DateTimeField()),
                ('t_reportmadeon', models.DateTimeField()),
                ('t_state', models.CharField(max_length=10)),
                ('t_issolved', models.BooleanField()),
                ('t_department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='TicketsApp.Department')),
                ('t_server', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='TicketsApp.Server')),
                ('t_service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='TicketsApp.Service')),
                ('t_useraffected', models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, related_name='t_useraffected', to=settings.AUTH_USER_MODEL)),
                ('t_userreporter', models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, related_name='t_userreporter', to=settings.AUTH_USER_MODEL)),
                ('t_usersolver', models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, related_name='t_usersolver', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.RemoveField(
            model_name='userprofile',
            name='id',
        ),
        migrations.RemoveField(
            model_name='userprofile',
            name='u_createddate',
        ),
        migrations.RemoveField(
            model_name='userprofile',
            name='u_office',
        ),
        migrations.AddField(
            model_name='userprofile',
            name='u_id',
            field=models.IntegerField(default=0),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='userprofile',
            name='u_department',
            field=models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, to='TicketsApp.Department'),
        ),
        migrations.AlterField(
            model_name='userprofile',
            name='u_user',
            field=models.OneToOneField(default=0, on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='disk',
            name='dsk_srv',
            field=models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, to='TicketsApp.Server'),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='u_company',
            field=models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, to='TicketsApp.Company'),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='u_management',
            field=models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, to='TicketsApp.Management'),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='u_phone',
            field=models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, to='TicketsApp.Phone'),
            preserve_default=False,
        ),
    ]
